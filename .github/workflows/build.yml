name: Build App


on:
  push:
    branches:
      - master   # Déclenche le workflow à chaque push sur la branche main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # Étape 1 : Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 2 : Construire et pousser l’image Docker du service Python
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/book-service:${{ github.sha }}

      # Étape 3 : Générer le SBOM pour l’image Docker
      - name: Generate SBOM for Docker image
        uses: anchore/sbom-action@v0
        with:
          image: docker.io/${{ secrets.DOCKER_USERNAME }}/book-service:${{ github.sha }}
          format: spdx-json
          artifact-name: sbom-docker-image.json

      # Étape 4 : Analyse SonarCloud du code source
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Étape 5 : Scanner l’image Docker avec Trivy
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{ secrets.DOCKER_USERNAME }}/book-service:${{ github.sha }}'
          format: 'table'
          exit-code: '1'               # Échec du job si vulnérabilités CRITICAL/HIGH
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

      # # Étape 9 : Analyse OWASP Dependency Check (désactivée)
      # - uses: 3r1co/dependency-check-action@master
      #   name: OWASP Dependency Check
      #   with:
      #     Project-Name: TestApp
        
      # # Étape 10 : Sauvegarder les rapports OWASP (désactivée)
      # - name: Archive dependency check reports
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: reports
      #     path: reports